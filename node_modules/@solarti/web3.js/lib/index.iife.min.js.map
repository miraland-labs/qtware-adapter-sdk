{"version":3,"file":"index.iife.min.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../node_modules/@solarti/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../node_modules/fast-stable-stringify/index.js","../node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/rpc-websockets/node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../src/rpc-websocket.ts","../src/timing.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _8n = BigInt(8);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.BASE;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        let p = this.multiplyUnsafe(CURVE.l / _2n).double();\n        if (CURVE.l % _2n)\n            p = p.add(this);\n        return p.equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(ExtendedPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(MIRALAND_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(MIRALAND_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(MIRALAND_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const MIRALAND_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, MIRALAND_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nMIRALAND_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solarti/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const MiralandJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type MiralandJSONRPCErrorCodeEnum =\n  typeof MiralandJSONRPCErrorCode[keyof typeof MiralandJSONRPCErrorCode];\n\nexport class MiralandJSONRPCError extends Error {\n  code: MiralandJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'MiralandJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, MiralandJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of miraland-core */\n  'miraland-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'miraland-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'miraland-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'miraland-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new MiralandJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new MiralandJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new MiralandJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new MiralandJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new MiralandJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_MLN } from \"@solarti/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_MLN);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new MiralandJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solarti/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solarti/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    // MI: replace Solana with Miraland as default\n    // devnet: 'http://api.devnet.solana.com',\n    // testnet: 'http://api.testnet.solana.com',\n    // 'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n    devnet: 'http://api.devnet-mln.miraland.top',\n    testnet: 'http://api.testnet-mln.miraland.top',\n    'mainnet-beta': 'http://api.mainnet-mln.miraland.top/',\n    // Solarti\n    'devnet-slrt': 'http://api.devnet-slrt.solarti.top',\n    'testnet-slrt': 'http://api.testnet-slrt.solarti.top',\n    'mainnet-slrt': 'http://api.mainnet-slrt.solarti.top',\n    // Qthor\n    'devnet-qth': 'http://api.devnet-qth.qthor.top',\n    'testnet-qth': 'http://api.testnet-qth.qthor.top',\n    'mainnet-qth': 'http://api.mainnet-qth.qthor.top',\n    // Mira\n    'devnet-mira': 'http://api.devnet-mira.arcaps.com',\n    'testnet-mira': 'http://api.testnet-mira.arcaps.com',\n    'mainnet-mira': 'http://api.mainnet-mira.arcaps.com',\n    // Miraland\n    'devnet-mln': 'http://api.devnet-mln.miraland.top',\n    'testnet-mln': 'http://api.testnet-mln.miraland.top',\n    'mainnet-mln': 'http://api.mainnet-mln.miraland.top',\n  },\n  https: {\n    // MI: replace Solana with Miraland as default\n    // devnet: 'https://api.devnet.solana.com',\n    // testnet: 'https://api.testnet.solana.com',\n    // 'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n    devnet: 'https://api.devnet-mln.miraland.top',\n    testnet: 'https://api.testnet-mln.miraland.top',\n    'mainnet-beta': 'https://api.mainnet-mln.miraland.top/',\n    // Solarti\n    'devnet-slrt': 'https://api.devnet-slrt.solarti.top',\n    'testnet-slrt': 'https://api.testnet-slrt.solarti.top',\n    'mainnet-slrt': 'https://api.mainnet-slrt.solarti.top',\n    // Qthor\n    'devnet-qth': 'https://api.devnet-qth.qthor.top',\n    'testnet-qth': 'https://api.testnet-qth.qthor.top',\n    'mainnet-qth': 'https://api.mainnet-qth.qthor.top',\n    // Mira\n    'devnet-mira': 'https://api.devnet-mira.arcaps.com',\n    'testnet-mira': 'https://api.testnet-mira.arcaps.com',\n    'mainnet-mira': 'https://api.mainnet-mira.arcaps.com',\n    // Miraland\n    'devnet-mln': 'https://api.devnet-mln.miraland.top',\n    'testnet-mln': 'https://api.testnet-mln.miraland.top',\n    'mainnet-mln': 'https://api.mainnet-mln.miraland.top',\n  },\n};\n\nexport type Cluster =\n    | 'devnet'\n    | 'testnet'\n    | 'mainnet-beta'\n    | 'devnet-slrt'\n    | 'testnet-slrt'\n    | 'mainnet-slrt'\n    | 'devnet-qth'\n    | 'testnet-qth'\n    | 'mainnet-qth'\n    | 'devnet-mira'\n    | 'testnet-mira'\n    | 'mainnet-mira'\n    | 'devnet-mln'\n    | 'testnet-mln'\n    | 'mainnet-mln';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['mainnet-mln'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n\n// m17: SLRT, QTH, MIRA, MLN\n/**\n * There are 1-billion lamports in one SLRT\n */\nexport const LAMPORTS_PER_SLRT = 1000000000;\n/**\n * There are 1-billion lamports in one QTH\n */\nexport const LAMPORTS_PER_QTH = 1000000000;\n/**\n * There are 1-billion lamports in one MIRA\n */\nexport const LAMPORTS_PER_MIRA = 1000000000;\n/**\n * There are 1-billion lamports in one MLN\n */\nexport const LAMPORTS_PER_MLN = 1000000000;\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","bool","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","assert","assert$3","u32","Uint32Array","createView","DataView","rotr","word","shift","v","padStart","TextEncoder","encode","toBytes","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","wrapConstructorWithOpts","hashCons","opts","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$2","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","_8n","CU_O","CURVE","freeze","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","z","t","static","p","Point","ZERO","mod","points","toInv","invertBatch","toAffine","toAffineBatch","fromAffine","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","precomputeWindow","W","windows","base","window","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","constTimeNegate","multiply","scalar","normalizeScalar","multiplyUnsafe","P0","isSmallOrder","isTorsionFree","invZ","is0","invert","ax","ay","zz","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","condition","item","neg","assertRstPoint","RistrettoPoint","ep","r0","r","Ns","isValid","Ns_D_is_sq","uvRatio","s_","edIsNegative","Nt","s2","W0","W1","W2","W3","hex","ensureBytes","r1","bytes255ToNumberLE","R1","calcElligatorRistrettoMap","r2","R2","emsg","equalBytes","numberTo32BytesLE","u1","u2","u1_2","u2_2","I","invertSqrt","Dx","Dy","toRawBytes","u2sq","invsqrt","D1","D2","zInv","_x","_y","toHex","bytesToHex","one","two","WeakMap","_setWindowSize","delete","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","toX25519","Point$1","Signature","assertValidity","fromHex","u8","concatBytes","arrays","every","reduce","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","numberTo32BytesBE","reverse","MAX_255B","modulo","q","gcd","nums","lastMultiplied","acc","inverted","reduceRight","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","b1","expectedLength","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","_sha512Sync","sha512s","async","utils","getExtendedPublicKeySync","getPublicKeySync","signSync","R","k","prepareVerification","sig","publicKey","SB","pub","finishVerification","kA","RkA","verifySync","sync","getPublicKey","sign","verify","crypto","node","nodeCrypto","web","self","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","messages","subtle","createHash","precompute","cached","sha512Sync","defineProperties","ed25519","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","module","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","left","right","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","nOne","lpow","inv","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sigma1","sigma0","SHA224","sha256","inRange","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","options","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","field","idx","values","Writer","deserializeField","reader","option","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct","properties","assign","MIRALAND_SCHEMA","Enum","enum","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","toBase58","zeroPad","fromPublicKey","seed","programId","publicKeyBytes","seeds","createProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddressSync","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","entries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","JSON","stringify","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","bigIntLayout","SystemInstruction","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","params","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","rest","path","_cached","isIterable","isObject","iterator","print","shiftIterator","done","toFailure","context","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","boolean","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","S","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","T","v5","v5$1","nil","generateRequest","method","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","MiralandJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","MiralandJSONRPCError","customMessage","globalThis","fetch","_interopRequireDefault","_typeof","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","__proto__","awrap","iter","object","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","Constructor","_toPrimitive","prim","_toPropertyKey","toPropertyKey","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_regenerator","_asyncToGenerator2","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","_login","_callee","resp","_callee$","_context","login","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","genShake","dkLen","HMAC","_key","iHash","oHash","hmac","_3n","beta","divNearest","endo","splitScalar","POW_2_128","c1","c2","k1","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","hasEvenY","isShort","bytesToNumber","isValidFieldElement","sqrtMod","isYOdd","isFirstByteOdd","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","normalizeSignature","truncateHash","radj","numTo32bStr","Q","multiplyAndAddUnsafe","isCompressed","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","parseDERSignature","sBytes","rBytesLeft","hexToNumber","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","numTo32b","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","t1","t2","scratch","bits2int_2","truncateOnly","_sha256Sync","_hmacSha256Sync","HmacDrbg","qByteLen","counter","hmacSha256","hmacSync","checkSync","incr","reseedSync","sl","generateSync","kmdToSig","kBytes","lowS","kinv","fromCompact","fromPrivateKey","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","der","recovered","canonical","privKey","drbg","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","msgs","ecdsaSign","secp256k1","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","LAMPORTS_PER_SLRT","LAMPORTS_PER_QTH","LAMPORTS_PER_MIRA","LAMPORTS_PER_MLN"],"mappings":"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"}